#!/usr/bin/env python3
"""
Quick Setup Script for Neo4j Connection
========================================

This script helps you quickly set up Neo4j authentication
for the Avatar-Engine utilities.
"""

import os
import sys
import argparse
from pathlib import Path
import getpass

def setup_neo4j():
    print("=" * 60)
    print("AVATAR-ENGINE NEO4J SETUP")
    print("=" * 60)
    
    project_dir = Path(__file__).parent.parent
    env_file = project_dir / ".env"
    
    print("\nThis script will help you configure Neo4j authentication.")
    print(f"Configuration will be saved to: {env_file}")
    
    # Check if .env already exists
    if env_file.exists():
        response = input("\n‚ö†Ô∏è  .env file already exists. Overwrite? (y/N): ")
        if response.lower() != 'y':
            print("Setup cancelled.")
            return
    
    print("\nüìù Neo4j Configuration")
    print("-" * 40)
    
    # Get Neo4j settings
    uri = input("Neo4j URI [bolt://localhost:7687]: ").strip()
    if not uri:
        uri = "bolt://localhost:7687"
    
    username = input("Neo4j Username [neo4j]: ").strip()
    if not username:
        username = "neo4j"
    
    # Get password securely
    password = getpass.getpass("Neo4j Password: ")
    if not password:
        print("‚ùå Password is required!")
        return
    
    database = input("Neo4j Database [neo4j]: ").strip()
    if not database:
        database = "neo4j"
    
    # Optional: Anthropic API key
    print("\nüìù Anthropic API Configuration (optional)")
    print("-" * 40)
    api_key = input("Anthropic API Key (press Enter to skip): ").strip()
    
    # Create .env content
    env_content = f"""# Avatar-Engine Environment Configuration
# Generated by setup_neo4j.py

# Neo4j Database Configuration
NEO4J_URI={uri}
NEO4J_USERNAME={username}
NEO4J_PASSWORD={password}
NEO4J_DATABASE={database}
"""
    
    if api_key:
        env_content += f"""
# Anthropic/Claude API Configuration
ANTHROPIC_API_KEY={api_key}
CLAUDE_MODEL=claude-3-5-sonnet-20240620
"""
    
    env_content += """
# System Configuration
LOG_LEVEL=INFO
DAILY_COST_LIMIT=50.0
COST_ALERT_THRESHOLD=20.0

# Analysis Configuration
MIN_MESSAGES_FOR_ANALYSIS=50
MAX_MESSAGES_PER_ANALYSIS=1000
"""
    
    # Write .env file
    with open(env_file, 'w') as f:
        f.write(env_content)
    
    print(f"\n‚úÖ Configuration saved to {env_file}")
    
    # Test connection
    print("\nüîÑ Testing Neo4j connection...")
    print("-" * 40)
    
    try:
        from neo4j import GraphDatabase
        
        driver = GraphDatabase.driver(uri, auth=(username, password))
        with driver.session() as session:
            result = session.run("RETURN 1 as test")
            result.single()
        driver.close()
        
        print("‚úÖ CONNECTION SUCCESSFUL!")
        print("\nYou can now use the Avatar-Engine utilities:")
        print("  ‚Ä¢ python3 utilities/reset_neo4j.py --dry-run")
        print("  ‚Ä¢ python3 utilities/backup_neo4j.py")
        print("  ‚Ä¢ python3 utilities/validate_data.py")
        
    except Exception as e:
        print(f"‚ùå Connection failed: {e}")
        print("\nPlease check:")
        print("  1. Neo4j is running")
        print("  2. The password is correct")
        print("  3. The URI is accessible")
        print("\nFor debugging, run: python3 utilities/debug_neo4j.py")
    
    # Set environment variable for current session
    os.environ["NEO4J_PASSWORD"] = password
    os.environ["NEO4J_URI"] = uri
    os.environ["NEO4J_USERNAME"] = username
    os.environ["NEO4J_DATABASE"] = database
    
    print("\n" + "=" * 60)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Setup Neo4j authentication for Avatar-Engine utilities",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
This interactive script will:
  1. Prompt for your Neo4j credentials
  2. Create a .env file with your settings
  3. Test the connection
  4. Provide next steps

Example:
  python3 setup_neo4j.py
        """
    )
    
    # Parse arguments (mainly for --help)
    args = parser.parse_args()
    
    # Run the setup
    try:
        setup_neo4j()
    except KeyboardInterrupt:
        print("\n\nSetup cancelled.")
        sys.exit(1)
